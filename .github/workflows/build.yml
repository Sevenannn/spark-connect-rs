name: build

on:
  push:
    branches: [main, "v*"]
  pull_request:
    branches: [main, "v*"]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true

      - name: Format
        run: cargo fmt -- --check

  build:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: build and lint with clippy
        run: cargo clippy

      - name: Check docs
        run: cargo doc

      - name: Check no default features (except rustls)
        run: cargo check

  integration_test:
    name: Integration Tests
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
      # Disable full debug symbol generation to speed up CI build and keep memory down
      # <https://doc.rust-lang.org/cargo/reference/profiles.html>
      RUSTFLAGS: "-C debuginfo=line-tables-only"
      # https://github.com/rust-lang/cargo/issues/10280
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
      RUST_BACKTRACE: "1"

    steps:
      - uses: actions/checkout@v3

      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Start emulated services
        run: docker-compose up -d

      - name: Run tests
        run: cargo test -p spark-connect-rs
